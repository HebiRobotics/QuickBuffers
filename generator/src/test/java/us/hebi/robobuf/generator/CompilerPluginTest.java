/*-
 * #%L
 * robobuf-generator
 * %%
 * Copyright (C) 2019 HEBI Robotics
 * %%
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public
 * License along with this program.  If not, see
 * <http://www.gnu.org/licenses/gpl-3.0.html>.
 * #L%
 */

package us.hebi.robobuf.generator;

import com.google.protobuf.compiler.PluginProtos.CodeGeneratorRequest;
import com.google.protobuf.compiler.PluginProtos.CodeGeneratorResponse;
import org.junit.Ignore;
import org.junit.Test;

import java.io.IOException;

/**
 * Plays requests generated by the protoc binary into the system and checks
 * their output.
 *
 * @author Florian Enner
 * @since 05 Aug 2019
 */
public class CompilerPluginTest {

    @Test
    public void testRequiredRequest() {
        CodeGeneratorRequest request = TestRequestLoader.getRequiredRequest();
        CodeGeneratorResponse response = CompilerPlugin.handleRequest(request);
    }

    @Test
    public void testImportRequest() {
        CodeGeneratorRequest request = TestRequestLoader.getImportRequest();
        CodeGeneratorResponse response = CompilerPlugin.handleRequest(request);
    }

    @Test
    public void testAllTypesRequest() {
        CodeGeneratorRequest request = TestRequestLoader.getAllTypesRequest();
        CodeGeneratorResponse response = CompilerPlugin.handleRequest(request);
    }

    @Test
    public void testRepeatedPackablesRequest() {
        CodeGeneratorRequest request = TestRequestLoader.getRepeatedPackablesRequest();
        CodeGeneratorResponse response = CompilerPlugin.handleRequest(request);
    }

    @Test
    @Ignore("manual debugging info")
    public void printRequestPackages() throws IOException {
        CodeGeneratorRequest request = TestRequestLoader.getAllTypesRequest();
        RequestInfo info = RequestInfo.withoutTypeMap(request);

        System.out.println("Files to generate\n");
        request.getFileToGenerateList().forEach(System.out::println);

        System.out.println("\n\nProto files\n");
        request.getProtoFileList().forEach(file -> {
            System.out.println(file.toBuilder()
                    .clearSourceCodeInfo()
                    .build());
        });

    }

}
