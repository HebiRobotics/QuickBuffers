package us.hebi.robobuf.generator;

import com.google.protobuf.compiler.PluginProtos.CodeGeneratorRequest;
import com.google.protobuf.compiler.PluginProtos.CodeGeneratorResponse;
import org.junit.Ignore;
import org.junit.Test;

import java.io.IOException;

/**
 * Plays requests generated by the protoc binary into the system and checks
 * their output.
 *
 * @author Florian Enner
 * @since 05 Aug 2019
 */
public class CompilerPluginTest {

    @Test
    public void testRequiredRequest() {
        CodeGeneratorRequest request = TestRequestLoader.getRequiredRequest();
        CodeGeneratorResponse response = CompilerPlugin.handleRequest(request);
    }

    @Test
    public void testImportRequest() {
        CodeGeneratorRequest request = TestRequestLoader.getImportRequest();
        CodeGeneratorResponse response = CompilerPlugin.handleRequest(request);
    }

    @Test
    public void testAllTypesRequest() {
        CodeGeneratorRequest request = TestRequestLoader.getAllTypesRequest();
        CodeGeneratorResponse response = CompilerPlugin.handleRequest(request);
    }

    @Test
    public void testRepeatedPackablesRequest() {
        CodeGeneratorRequest request = TestRequestLoader.getRepeatedPackablesRequest();
        CodeGeneratorResponse response = CompilerPlugin.handleRequest(request);
    }

    @Test
    @Ignore("manual debugging info")
    public void printRequestPackages() throws IOException {
        CodeGeneratorRequest request = TestRequestLoader.getAllTypesRequest();
        RequestInfo info = RequestInfo.withoutTypeMap(request);

        System.out.println("Files to generate\n");
        request.getFileToGenerateList().forEach(System.out::println);

        System.out.println("\n\nProto files\n");
        request.getProtoFileList().forEach(file -> {
            System.out.println(file.toBuilder()
                    .clearSourceCodeInfo()
                    .build());
        });

    }

}