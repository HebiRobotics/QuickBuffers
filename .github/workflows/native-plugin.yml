name: Native Plugin

on:
  push:
    branches: [ release/native-gen ]
  workflow_dispatch:
    inputs:
      mavenGoal:
        type: choice
        description: "Maven Deploy Goal"
        default: 'deploy'
        options:
          - 'package'
          - 'verify'
          - 'deploy'
      makeConveyorSite:
        description: "Conveyor Site"
        type: boolean
        default: true

jobs:
  native-plugins:
    strategy:
      matrix:
        include:
          - runner: windows-2022
            timeout: 15
            cache: 'maven'
          - runner: macos-11
            timeout: 15
            cache: 'maven'
#          - runner: macos-13-xlarge
#            timeout: 10
#            cache: 'maven'
          - runner: ubuntu-20.04
            timeout: 15
            cache: 'maven'
#          - runner: [ self-hosted, linux-aarch64 ]
#            timeout: 40
#            cache: '' # disable upload
    runs-on: ${{ matrix.runner }}
    timeout-minutes: ${{ matrix.timeout }}
    continue-on-error: true # continue to check if an issue is limited to one platform
    steps:
    - uses: actions/checkout@v3
    - uses: stCarolas/setup-maven@v4.5
      with:
        maven-version: 3.9.1
    - uses: graalvm/setup-graalvm@v1
      with:
        version: 'latest'
        java-version: '21'
        set-java-home: 'true'
        native-image-job-reports: 'true'
        cache: ${{ matrix.cache }}
        github-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Build native plugins # also builds dependencies to the output
      run: |
        echo "GRAALVM_HOME: $GRAALVM_HOME"
        echo "JAVA_HOME: $JAVA_HOME"
        mvn clean package -P"makeNative,useNative" --projects "protoc-gen-quickbuf,quickbuf-compat" -am

    - name: Upload native plugins
      uses: actions/upload-artifact@v3
      with:
        name: native-plugins
        path: "protoc-gen-*/target/*.exe"
        retention-days: 10

  release:
    needs: [native-plugins]
    runs-on: [ubuntu-latest]
    timeout-minutes: 30
    continue-on-error: false
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        distribution: zulu
        java-version: 8
        server-id: ossrh
    - uses: stCarolas/setup-maven@v4.5
      with:
        maven-version: 3.9.1

    - name: Import GPG Key
      uses: crazy-max/ghaction-import-gpg@v5.0.0
      if: ${{ github.event.inputs.releaseMavenArtifacts == 'true' }}
      with:
        gpg_private_key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
        passphrase: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

    - name: Clean Workspace
      run: mvn clean

    - name: Download pre-built native plugins
      uses: actions/download-artifact@v3
      with:
        name: native-plugins
        path: .

    - name: Test Native Plugins
      run: |
        mvn -B -U \
          -P"release,useNative" \
          --projects "protoc-gen-quickbuf,quickbuf-compat" -am
          package

    - name: Deploy Maven Artifacts
      env:
        MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
      run: |
        echo GPG_TTY=$(tty) >> $GITHUB_ENV
        mvn -B -U \
          -P"release" \
          --projects "protoc-gen-quickbuf,quickbuf-compat" -am \
          -s settings.xml \
          -Dgpg.passphrase=${{ secrets.MAVEN_GPG_PASSPHRASE }} \
          -DautoReleaseAfterClose=true
          ${{ github.event.inputs.mavenGoal }}

    - name: Conveyor setup
      if: ${{ github.event.inputs.makeConveyorSite == 'true' }}
      run: |
        wget https://downloads.hydraulic.dev/conveyor/hydraulic-conveyor_13.0_amd64.deb -O conveyor.deb
        sudo apt install ./conveyor.deb

    - name: Conveyor site
      if: ${{ github.event.inputs.makeConveyorSite == 'true' }}
      run: |
        chmod +x */target/**.exe
        conveyor make site

    - name: Upload site
      if: ${{ github.event.inputs.makeConveyorSite == 'true' }}
      uses: actions/upload-artifact@v3
      with:
        name: conveyor-site
        path: output/*
        retention-days: 10
        # TODO: publish to Github releases
      

