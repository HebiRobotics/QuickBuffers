/*-
 * #%L
 * robobuf-benchmarks
 * %%
 * Copyright (C) 2019 HEBI Robotics
 * %%
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public
 * License along with this program.  If not, see
 * <http://www.gnu.org/licenses/gpl-3.0.html>.
 * #L%
 */

// automatically generated by the FlatBuffers compiler, do not modify

package protos.benchmarks.flatbuffers.fb;

import java.nio.*;
import java.lang.*;

import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class Bar extends Struct {
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public Bar __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Foo parent() { return parent(new Foo()); }
  public Foo parent(Foo obj) { return obj.__assign(bb_pos + 0, bb); }
  public int time() { return bb.getInt(bb_pos + 16); }
  public float ratio() { return bb.getFloat(bb_pos + 20); }
  public int size() { return bb.getShort(bb_pos + 24) & 0xFFFF; }

  public static int createBar(FlatBufferBuilder builder, long parent_id, short parent_count, byte parent_prefix, long parent_length, int time, float ratio, int size) {
    builder.prep(8, 32);
    builder.pad(6);
    builder.putShort((short)size);
    builder.putFloat(ratio);
    builder.putInt(time);
    builder.prep(8, 16);
    builder.putInt((int)parent_length);
    builder.pad(1);
    builder.putByte(parent_prefix);
    builder.putShort(parent_count);
    builder.putLong(parent_id);
    return builder.offset();
  }
}

